{"ast":null,"code":"import { Children } from \"react\";\nconst Show = props => {\n  let when = null;\n  let otherwise = null;\n  Children.forEach(props.children, child => {\n    if (child.props.isTrue === undefined) {\n      otherwise = child;\n    } else if (!when && child.props.isTrue === true) {\n      when = child;\n    }\n  });\n  return when || otherwise;\n};\n_c = Show;\nShow.When = ({\n  isTrue,\n  children\n}) => isTrue && children;\nShow.Else = ({\n  render,\n  children\n}) => render || children;\nexport default Show;\nvar _c;\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"names":["Children","Show","props","when","otherwise","forEach","children","child","isTrue","undefined","_c","When","Else","render","$RefreshReg$"],"sources":["/Users/user01/Project/react-utils/src/components/Show.js"],"sourcesContent":["import { Children } from \"react\";\n\nconst Show = (props) => {\n  let when = null;\n  let otherwise = null;\n\n  Children.forEach(props.children, (child) => {\n    if (child.props.isTrue === undefined) {\n      otherwise = child;\n    } else if (!when && child.props.isTrue === true) {\n      when = child;\n    }\n  });\n  return when || otherwise;\n};\n\nShow.When = ({ isTrue, children }) => isTrue && children;\nShow.Else = ({ render, children }) => render || children;\n\nexport default Show;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,SAAS,GAAG,IAAI;EAEpBJ,QAAQ,CAACK,OAAO,CAACH,KAAK,CAACI,QAAQ,EAAGC,KAAK,IAAK;IAC1C,IAAIA,KAAK,CAACL,KAAK,CAACM,MAAM,KAAKC,SAAS,EAAE;MACpCL,SAAS,GAAGG,KAAK;IACnB,CAAC,MAAM,IAAI,CAACJ,IAAI,IAAII,KAAK,CAACL,KAAK,CAACM,MAAM,KAAK,IAAI,EAAE;MAC/CL,IAAI,GAAGI,KAAK;IACd;EACF,CAAC,CAAC;EACF,OAAOJ,IAAI,IAAIC,SAAS;AAC1B,CAAC;AAACM,EAAA,GAZIT,IAAI;AAcVA,IAAI,CAACU,IAAI,GAAG,CAAC;EAAEH,MAAM;EAAEF;AAAS,CAAC,KAAKE,MAAM,IAAIF,QAAQ;AACxDL,IAAI,CAACW,IAAI,GAAG,CAAC;EAAEC,MAAM;EAAEP;AAAS,CAAC,KAAKO,MAAM,IAAIP,QAAQ;AAExD,eAAeL,IAAI;AAAC,IAAAS,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}