{"ast":null,"code":"// ✅ Debounce function: Delays execution of a function to prevent excessive calls\nexport const debounce = (func, delay = 300) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => func(...args), delay);\n  };\n};\n\n// ✅ Throttle function: Ensures a function is called at most once per interval\nexport const throttle = (func, limit = 300) => {\n  let lastCall = 0;\n  return (...args) => {\n    const now = Date.now();\n    if (now - lastCall >= limit) {\n      lastCall = now;\n      func(...args);\n    }\n  };\n};\n\n// ✅ Capitalize: Converts first letter of a string to uppercase\nexport const capitalize = str => {\n  return str ? str.charAt(0).toUpperCase() + str.slice(1) : \"\";\n};\n\n// ✅ Truncate Text: Shortens a string to a specific length and adds \"...\"\nexport const truncateText = (text, maxLength = 100) => {\n  return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\n};\n\n// ✅ Deep Clone: Creates a deep copy of an object to avoid mutations\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\n\n// ✅ Generate UUID: Creates a unique identifier\nexport const generateUUID = () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, char => {\n    const random = Math.random() * 16 | 0;\n    const value = char === \"x\" ? random : random & 0x3 | 0x8;\n    return value.toString(16);\n  });\n};\n\n// ✅ Format Date: Converts date to readable format (e.g., \"Jan 1, 2025\")\nexport const formatDate = (date, locale = \"en-US\") => {\n  return new Date(date).toLocaleDateString(locale, {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\"\n  });\n};","map":{"version":3,"names":["debounce","func","delay","timer","args","clearTimeout","setTimeout","throttle","limit","lastCall","now","Date","capitalize","str","charAt","toUpperCase","slice","truncateText","text","maxLength","length","deepClone","obj","JSON","parse","stringify","generateUUID","replace","char","random","Math","value","toString","formatDate","date","locale","toLocaleDateString","year","month","day"],"sources":["/Users/user01/Project/react-utils/src/utils/helpers.js"],"sourcesContent":["// ✅ Debounce function: Delays execution of a function to prevent excessive calls\nexport const debounce = (func, delay = 300) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => func(...args), delay);\n  };\n};\n\n// ✅ Throttle function: Ensures a function is called at most once per interval\nexport const throttle = (func, limit = 300) => {\n  let lastCall = 0;\n  return (...args) => {\n    const now = Date.now();\n    if (now - lastCall >= limit) {\n      lastCall = now;\n      func(...args);\n    }\n  };\n};\n\n// ✅ Capitalize: Converts first letter of a string to uppercase\nexport const capitalize = (str) => {\n  return str ? str.charAt(0).toUpperCase() + str.slice(1) : \"\";\n};\n\n// ✅ Truncate Text: Shortens a string to a specific length and adds \"...\"\nexport const truncateText = (text, maxLength = 100) => {\n  return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\n};\n\n// ✅ Deep Clone: Creates a deep copy of an object to avoid mutations\nexport const deepClone = (obj) => {\n  return JSON.parse(JSON.stringify(obj));\n};\n\n// ✅ Generate UUID: Creates a unique identifier\nexport const generateUUID = () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (char) => {\n    const random = (Math.random() * 16) | 0;\n    const value = char === \"x\" ? random : (random & 0x3) | 0x8;\n    return value.toString(16);\n  });\n};\n\n// ✅ Format Date: Converts date to readable format (e.g., \"Jan 1, 2025\")\nexport const formatDate = (date, locale = \"en-US\") => {\n  return new Date(date).toLocaleDateString(locale, {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,GAAG,KAAK;EAC7C,IAAIC,KAAK;EACT,OAAO,CAAC,GAAGC,IAAI,KAAK;IAClBC,YAAY,CAACF,KAAK,CAAC;IACnBA,KAAK,GAAGG,UAAU,CAAC,MAAML,IAAI,CAAC,GAAGG,IAAI,CAAC,EAAEF,KAAK,CAAC;EAChD,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMK,QAAQ,GAAGA,CAACN,IAAI,EAAEO,KAAK,GAAG,GAAG,KAAK;EAC7C,IAAIC,QAAQ,GAAG,CAAC;EAChB,OAAO,CAAC,GAAGL,IAAI,KAAK;IAClB,MAAMM,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAGD,QAAQ,IAAID,KAAK,EAAE;MAC3BC,QAAQ,GAAGC,GAAG;MACdT,IAAI,CAAC,GAAGG,IAAI,CAAC;IACf;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAIC,GAAG,IAAK;EACjC,OAAOA,GAAG,GAAGA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,SAAS,GAAG,GAAG,KAAK;EACrD,OAAOD,IAAI,CAACE,MAAM,GAAGD,SAAS,GAAGD,IAAI,CAACF,KAAK,CAAC,CAAC,EAAEG,SAAS,CAAC,GAAG,KAAK,GAAGD,IAAI;AAC1E,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAIC,GAAG,IAAK;EAChC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,GAAG,CAAC,CAAC;AACxC,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,sCAAsC,CAACC,OAAO,CAAC,OAAO,EAAGC,IAAI,IAAK;IACvE,MAAMC,MAAM,GAAIC,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,EAAE,GAAI,CAAC;IACvC,MAAME,KAAK,GAAGH,IAAI,KAAK,GAAG,GAAGC,MAAM,GAAIA,MAAM,GAAG,GAAG,GAAI,GAAG;IAC1D,OAAOE,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,MAAM,GAAG,OAAO,KAAK;EACpD,OAAO,IAAIxB,IAAI,CAACuB,IAAI,CAAC,CAACE,kBAAkB,CAACD,MAAM,EAAE;IAC/CE,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE;EACP,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}