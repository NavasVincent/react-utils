{"ast":null,"code":"export const setLSData=(key,value)=>{try{const data=typeof value===\"object\"?JSON.stringify(value):value;localStorage.setItem(key,data);}catch(error){console.error(`Error saving to localStorage: ${error}`);}};export const getLSData=function(key){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{const item=localStorage.getItem(key);if(item===null)return defaultValue;// ✅ Check if item is JSON before parsing\nif(item.startsWith(\"{\")||item.startsWith(\"[\")){return JSON.parse(item);}return item;// Return as a string if it's not JSON\n}catch(error){console.warn(`Error parsing localStorage key \"${key}\": ${error}`);return defaultValue;}};export const removeLSData=key=>{try{localStorage.removeItem(key);}catch(error){console.error(`Error removing localStorage key \"${key}\": ${error}`);}};export const clearLS=()=>{try{localStorage.clear();}catch(error){console.error(`Error clearing localStorage: ${error}`);}};","map":{"version":3,"names":["setLSData","key","value","data","JSON","stringify","localStorage","setItem","error","console","getLSData","defaultValue","arguments","length","undefined","item","getItem","startsWith","parse","warn","removeLSData","removeItem","clearLS","clear"],"sources":["/Users/user01/Project/react-utils/src/utils/localStorageUtils.js"],"sourcesContent":["export const setLSData = (key, value) => {\n  try {\n    const data = typeof value === \"object\" ? JSON.stringify(value) : value;\n    localStorage.setItem(key, data);\n  } catch (error) {\n    console.error(`Error saving to localStorage: ${error}`);\n  }\n};\n\nexport const getLSData = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    if (item === null) return defaultValue;\n\n    // ✅ Check if item is JSON before parsing\n    if (item.startsWith(\"{\") || item.startsWith(\"[\")) {\n      return JSON.parse(item);\n    }\n\n    return item; // Return as a string if it's not JSON\n  } catch (error) {\n    console.warn(`Error parsing localStorage key \"${key}\": ${error}`);\n    return defaultValue;\n  }\n};\n\n\nexport const removeLSData = (key) => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(`Error removing localStorage key \"${key}\": ${error}`);\n  }\n};\n\nexport const clearLS = () => {\n  try {\n    localStorage.clear();\n  } catch (error) {\n    console.error(`Error clearing localStorage: ${error}`);\n  }\n};\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,SAAS,CAAGA,CAACC,GAAG,CAAEC,KAAK,GAAK,CACvC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,MAAO,CAAAD,KAAK,GAAK,QAAQ,CAAGE,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAGA,KAAK,CACtEI,YAAY,CAACC,OAAO,CAACN,GAAG,CAAEE,IAAI,CAAC,CACjC,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiCA,KAAK,EAAE,CAAC,CACzD,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,SAAS,CAAG,QAAAA,CAACT,GAAG,CAA0B,IAAxB,CAAAU,YAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAChD,GAAI,CACF,KAAM,CAAAG,IAAI,CAAGT,YAAY,CAACU,OAAO,CAACf,GAAG,CAAC,CACtC,GAAIc,IAAI,GAAK,IAAI,CAAE,MAAO,CAAAJ,YAAY,CAEtC;AACA,GAAII,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,EAAIF,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,CAAE,CAChD,MAAO,CAAAb,IAAI,CAACc,KAAK,CAACH,IAAI,CAAC,CACzB,CAEA,MAAO,CAAAA,IAAI,CAAE;AACf,CAAE,MAAOP,KAAK,CAAE,CACdC,OAAO,CAACU,IAAI,CAAC,mCAAmClB,GAAG,MAAMO,KAAK,EAAE,CAAC,CACjE,MAAO,CAAAG,YAAY,CACrB,CACF,CAAC,CAGD,MAAO,MAAM,CAAAS,YAAY,CAAInB,GAAG,EAAK,CACnC,GAAI,CACFK,YAAY,CAACe,UAAU,CAACpB,GAAG,CAAC,CAC9B,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCP,GAAG,MAAMO,KAAK,EAAE,CAAC,CACrE,CACF,CAAC,CAED,MAAO,MAAM,CAAAc,OAAO,CAAGA,CAAA,GAAM,CAC3B,GAAI,CACFhB,YAAY,CAACiB,KAAK,CAAC,CAAC,CACtB,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCA,KAAK,EAAE,CAAC,CACxD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}